[{"path":[]},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement explore.statistics@education.gov.uk. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to eesyapi","title":"Contributing to eesyapi","text":"Try make use usethis package wherever possible. initially clone package, first thing ’ll need install devtools: load package current form:","code":"install.packages(\"devtools\") devtools::load_all()"},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"documenting","dir":"","previous_headings":"","what":"Documenting","title":"Contributing to eesyapi","text":"Please always document develop. Always add description functions, alongside working examples (see section example_id() generating functional IDs codes). extended processes / workflows, recommend starting vignette explaining workflow ’re creating functions underpinning .","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"adding-a-packagedependency","dir":"","previous_headings":"","what":"Adding a package/dependency","title":"Contributing to eesyapi","text":"usethis::use_package(<package_name>) Note adding function another package one eesyapi functions need explicitly state package function call, e.g.: package::function() Alternatively, ’s lot uses single function within one R scripts, can call function top R script, e.g: information see roxygen2 documentation declaring dependencies.","code":"@' importFrom package function"},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"creating-a-new-function-script","dir":"","previous_headings":"","what":"Creating a new function script","title":"Contributing to eesyapi","text":"usethis::use_r(name = <script_name>) create new script within package R/ folder.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"creating-a-new-function-test-script","dir":"","previous_headings":"","what":"Creating a new function test script","title":"Contributing to eesyapi","text":"usethis::use_test(name = <script_name>) create new blank test script within package testthat/ folder.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"using-example_id-with-examples-and-tests","dir":"","previous_headings":"","what":"Using example_id() with examples and tests","title":"Contributing to eesyapi","text":"functionality eesyapi heavily tied EES API content variety associated IDs codes, created function example_id() create go reference point example IDs codes work API. example_id() used generate IDs codes whenever writing function tests examples require connection API. example api_url(), give functioning example: api_url(\"get-data-catalogue\", publication_id = eesyapi::example_id(\"publication\")) connects actual publication EES retrieves list data sets within publication. using example_id(), can easily update tests examples given ID code becomes unusable context package reason.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"using-test-data-in-the-tests-and-seeding--refreshing","dir":"","previous_headings":"","what":"Using test data in the tests and seeding / refreshing","title":"Contributing to eesyapi","text":"data used package test suite stored rds format tests/testthat/testdata/ folder. code required obtain test data always added tests/testthat/seed_tests.R script: Add individual function creating individual test data file Add function call seed_tests() make sure refreshed part bulk refresh Note example_id() function especially useful creating test data used creating test data wherever possible. refresh test data run seed_tests(). refresh individual test data sets, find relevant see function run .","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"updating-the-package-version","dir":"","previous_headings":"","what":"Updating the package version","title":"Contributing to eesyapi","text":"changes completed, reviewed ready use wild, can increment package version using: usethis::use_version() ’ve incremented version number, ’ll add new heading news.md. Add summary news.md accept ’s offer commit behalf. pushed main branch, create new release GitHub .","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/CONTRIBUTING.html","id":"running-tests","dir":"","previous_headings":"","what":"Running tests","title":"Contributing to eesyapi","text":"run following lines test package locally: get lot lintr errors, particularly around things defined, make sure load package first using Ctrl-Shft-L devtools::load_all(\".\"), run . ’s known issue lintr picking bindings packages loaded","code":"# To check functionality devtools::check() # Ctrl-Shft-E  # For code styling styler::style_pkg() lintr::lint_package()"},{"path":"https://dfe-analytical-services.github.io/eesyapi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 eesyapi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/PULL_REQUEST_TEMPLATE.html","id":null,"dir":"","previous_headings":"","what":"Brief overview of changes","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/PULL_REQUEST_TEMPLATE.html","id":"why-are-these-changes-being-made","dir":"","previous_headings":"","what":"Why are these changes being made?","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/PULL_REQUEST_TEMPLATE.html","id":"detailed-description-of-changes","dir":"","previous_headings":"","what":"Detailed description of changes","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/PULL_REQUEST_TEMPLATE.html","id":"additional-information-for-reviewers","dir":"","previous_headings":"","what":"Additional information for reviewers","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/PULL_REQUEST_TEMPLATE.html","id":"issue-ticket-numbers-and-link","dir":"","previous_headings":"","what":"Issue ticket number/s and link","title":"Brief overview of changes","text":"…","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rich Bielby. Author, maintainer. Cam Race. Author. Laura Selby. Contributor.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bielby R, Race C (2024). eesyapi: EES-y API. R package version 0.3.0, https://dfe-analytical-services.github.io/eesyapi.","code":"@Manual{,   title = {eesyapi: EES-y API},   author = {Rich Bielby and Cam Race},   year = {2024},   note = {R package version 0.3.0},   url = {https://dfe-analytical-services.github.io/eesyapi}, }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/index.html","id":"eesyapi-","dir":"","previous_headings":"","what":"EES-y API","title":"EES-y API","text":"R package support analysts connecting processing data DfE’s explore education statistics API endpoints.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"EES-y API","text":"eesyapi currently available CRAN. time can install development version GitHub. using renv project (recommended): Otherwise:","code":"renv::install(\"dfe-analytical-services/eesyapi\") # install.packages(\"devtools\") devtools::install_github(\"dfe-analytical-services/eesyapi\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/index.html","id":"potential-errors-when-installing","dir":"","previous_headings":"","what":"Potential errors when installing","title":"EES-y API","text":"internal DfE users, get ERROR [curl: (22) requested URL returned error: 401], don’t know , try running Sys.unsetenv(\"GITHUB_PAT\") temporarily clear GitHub PAT variable. try install . works, need look “GITHUB_PAT” variable set remove permanently fix issue, contact us support need help issues installing.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"EES-y API","text":"Ideas eesyapi first raised GitHub issue anyone free write code create pull request review. details contributing eesyapi, see contributing guidelines.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an EES API URL — api_url","title":"Generate an EES API URL — api_url","text":"function returns single URL connect chosen EES API endpoint. resulting URL can used GET POST (appropriate) order connect. Whether publication_id dataset_id (neither) parameter required depends endpoint chose.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an EES API URL — api_url","text":"","code":"api_url(   endpoint = \"get-publications\",   publication_id = NULL,   dataset_id = NULL,   indicators = NULL,   time_periods = NULL,   geographic_levels = NULL,   locations = NULL,   filter_items = NULL,   dataset_version = NULL,   page_size = NULL,   page = NULL,   api_version = \"1.0\",   environment = \"dev\",   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an EES API URL — api_url","text":"endpoint Name endpoint, can \"get-publications\", \"get-data-catalogue\", \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" publication_id ID publication connected . required endpoint \"get-data-catalogue\" dataset_id ID data set connected . required endpoint one \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" indicators Indicators required string vector strings (required) time_periods Time periods required string (\"period|code\") vector strings geographic_levels Geographic levels required string vector strings locations Location code required string vector strings filter_items Filter items required string vector strings dataset_version Version data set connected page_size Number results return single query page Page number query results return api_version EES API version environment EES environment connect : \"dev\", \"test\", \"preprod\" \"prod\" verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an EES API URL — api_url","text":"string containing URL connecting EES API","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an EES API URL — api_url","text":"","code":"api_url() #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/publications?\" api_url(\"get-publications\") #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/publications?\" api_url(\"get-data-catalogue\", publication_id = eesyapi::example_id(\"publication\")) #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/publications/d823e4df-626f-4450-9b21-08dc8b95fc02/data-sets?\" api_url(\"get-summary\", dataset_id = eesyapi::example_id(\"dataset\")) #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/data-sets/830f9201-9e11-ad75-8dcd-d2efe2834457\" api_url(\"get-meta\", dataset_id = eesyapi::example_id(\"dataset\")) #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/data-sets/830f9201-9e11-ad75-8dcd-d2efe2834457/meta\" api_url(   \"get-data\",   dataset_id = eesyapi::example_id(\"dataset\"),   indicators = example_id(\"indicator\"),   time_periods = c(\"2024|W12\", \"2024|W13\"),   geographic_levels = c(\"NAT\"),   filter_items = example_id(\"filter_item\") ) #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/data-sets/830f9201-9e11-ad75-8dcd-d2efe2834457/query?timePeriods.in=2024|W12%2C2024|W13&geographicLevels.in=NAT&filters.in=wEZcb&indicators=PbNeb\" api_url(   \"post-data\",   dataset_id = eesyapi::example_id(\"dataset\"),   indicators = example_id(\"indicator\") ) #> [1] \"https://dev.statistics.api.education.gov.uk/api/v1.0/data-sets/830f9201-9e11-ad75-8dcd-d2efe2834457/query\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"EES API URL paging — api_url_pages","title":"EES API URL paging — api_url_pages","text":"EES API results paged, one page returned single request submitted API. function creates URL query syntax specify number results returned per page page number retrieve. largely used api_url() automatically generate API request URLs, exported part package users wish generate URLs.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"EES API URL paging — api_url_pages","text":"","code":"api_url_pages(page_size = 40, page = NULL)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"EES API URL paging — api_url_pages","text":"page_size Number results return single query (max 40) page Page number return","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_pages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"EES API URL paging — api_url_pages","text":"String containing pages query","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_pages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"EES API URL paging — api_url_pages","text":"","code":"api_url_pages() #> [1] \"pageSize=40\" api_url_pages(page_size = 20, page = 2) #> [1] \"page=2&pageSize=20\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate URL code for API data query — api_url_query","title":"Generate URL code for API data query — api_url_query","text":"Generates query code append base API query URL use query_dataset_get().","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate URL code for API data query — api_url_query","text":"","code":"api_url_query(   indicators,   time_periods = NULL,   geographic_levels = NULL,   locations = NULL,   filter_items = NULL )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate URL code for API data query — api_url_query","text":"indicators Indicators required string vector strings (required) time_periods Time periods required string (\"period|code\") vector strings geographic_levels Geographic levels required string vector strings locations Location code required string vector strings filter_items Filter items required string vector strings","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate URL code for API data query — api_url_query","text":"String containing data query string append GET data query URL","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/api_url_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate URL code for API data query — api_url_query","text":"","code":"api_url_query(example_id(\"indicator\")) #> [1] \"?indicators=PbNeb\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/convert_api_filter_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert filter type to API filter type — convert_api_filter_type","title":"Convert filter type to API filter type — convert_api_filter_type","text":"API uses slightly different naming convention different types filters used analysts within data files. function just converts file versions API versions.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/convert_api_filter_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert filter type to API filter type — convert_api_filter_type","text":"","code":"convert_api_filter_type(filter_type)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/convert_api_filter_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert filter type to API filter type — convert_api_filter_type","text":"filter_type type filter queried: \"time_periods\", \"geographic_levels\", \"locations\" \"filter_items\"","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/convert_api_filter_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert filter type to API filter type — convert_api_filter_type","text":"String containing API friendly filter type descriptor","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/convert_api_filter_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert filter type to API filter type — convert_api_filter_type","text":"","code":"convert_api_filter_type(\"filter_items\") #> [1] \"filters\" convert_api_filter_type(\"geographic_levels\") #> [1] \"geographicLevels\" convert_api_filter_type(\"locations\") #> [1] \"locations\" convert_api_filter_type(\"filter_items\") #> [1] \"filters\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_geography_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example geography-query data frame — example_geography_query","title":"Create an example geography-query data frame — example_geography_query","text":"Create example geography-query data frame","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_geography_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example geography-query data frame — example_geography_query","text":"","code":"example_geography_query(level = \"nat_yorks\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_geography_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an example geography-query data frame — example_geography_query","text":"level Query level within available options, can one \\\"nat_yorks\\\" \\\"nat_yorks_yorkslas\\\"","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_geography_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example geography-query data frame — example_geography_query","text":"Data frame containing example geography query","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_geography_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example geography-query data frame — example_geography_query","text":"","code":"example_geography_query() #>   return_level search_level identifier_type identifier #> 1          NAT          NAT            code  E92000001 #> 2          REG          REG            code  E12000002"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Example ID — example_id","title":"Example ID — example_id","text":"function returns examples working IDs can used API.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example ID — example_id","text":"","code":"example_id(   level = \"dataset\",   environment = \"dev\",   group = \"public-api-testing\" )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example ID — example_id","text":"level Level ID example return: \"publication\" \"data set\" environment Environment return working example group Choose publication group examples use. Can \"attendance\".","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example ID — example_id","text":"String containing example ID present API","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example ID — example_id","text":"","code":"example_id() #> [1] \"830f9201-9e11-ad75-8dcd-d2efe2834457\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_json_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an example json query string — example_json_query","title":"Create an example json query string — example_json_query","text":"Create example json query string use examples tests","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_json_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an example json query string — example_json_query","text":"","code":"example_json_query()"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_json_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an example json query string — example_json_query","text":"String containing example json query","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/example_json_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an example json query string — example_json_query","text":"","code":"example_json_query() |> cat() #> { #> \"criteria\": { #>   \"and\": [ #>     { #>       \"timePeriods\": { #>         \"in\": [ #>           { #>             \"period\": \"2024\", #>             \"code\": \"W23\" #>           } #>         ] #>       } #>     }, #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"id\": \"dP0Zw\" #>           } #>         ] #>       } #>     } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"REG\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"REG\", #>             \"id\": \"rg3Nj\" #>           } #>         ] #>       } #>     } #>   ] #>   } #>     ] #>   }, #> { #> \"and\": [ #>     { #>       \"filters\": { #>         \"in\": [ #>           \"pmRSo\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"CvuId\", #>           \"6AXrf\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"ThDPJ\", #>           \"crH31\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"uLQo4\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"bBrtT\" #>         ] #>       } #>     } #> ] #> } #>   ] #> }, #> \"indicators\": [ #>   \"bqZtT\" #> ], #> \"debug\": false, #> \"page\": 1, #> \"pageSize\": 1000 #> }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_data_catalogue.html","id":null,"dir":"Reference","previous_headings":"","what":"Get publication specific data set catalogue — get_data_catalogue","title":"Get publication specific data set catalogue — get_data_catalogue","text":"Get publication specific data set catalogue","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_data_catalogue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get publication specific data set catalogue — get_data_catalogue","text":"","code":"get_data_catalogue(   publication_id,   page_size = NULL,   page = NULL,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_data_catalogue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get publication specific data set catalogue — get_data_catalogue","text":"publication_id publication ID used API page_size Number results collect single query API (max 40) page Page number return (Default NULL loop pages query collated). verbose Add extra contextual information whilst running","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_data_catalogue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get publication specific data set catalogue — get_data_catalogue","text":"Data frame listing data sets contained within single publication","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_data_catalogue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get publication specific data set catalogue — get_data_catalogue","text":"","code":"get_data_catalogue(example_id(\"publication\")) #>                                     id                          title summary #> 1 830f9201-9e11-ad75-8dcd-d2efe2834457 10MB data file for API dataset         #> 2 830f9201-5343-7c73-98d7-8e5ac02933b2                    Loc names 3    test #>      status latestVersion.version          latestVersion.published #> 1 Published                   4.0 2024-10-09T12:01:22.068044+00:00 #> 2 Published                   1.3 2024-10-09T12:01:22.068044+00:00 #>   latestVersion.totalResults                     latestVersion.id #> 1                        220 26010adc-713a-4cae-9074-e5a864a38363 #> 2                          3 4f29af11-8ccc-4897-8924-246a6666f51c #>   latestVersion.timePeriods.start latestVersion.timePeriods.end #> 1                         2022/23                       2022/23 #> 2                            2018                          2019 #>   latestVersion.geographicLevels    latestVersion.filters #> 1                         School establishment type, type #> 2                Local authority                          #>                                                           latestVersion.indicators #> 1 ppe value, ppegrd value, retained 2ndyr value, retained value, total pupil value #> 2                                                                Admission Numbers"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Query a data set using GET and a query URL — get_dataset","title":"Query a data set using GET and a query URL — get_dataset","text":"function provides method generating sending URL based data query EES API. minimum, requires dataset_id indicators flags provided. Note GET command limited level logic can process. example way using GET make query combines different filters logic. give GET set filter items search , can return rows containing items.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query a data set using GET and a query URL — get_dataset","text":"","code":"get_dataset(   dataset_id,   indicators,   time_periods = NULL,   geographic_levels = NULL,   locations = NULL,   filter_items = NULL,   dataset_version = NULL,   api_version = NULL,   page = NULL,   page_size = 1000,   parse = TRUE,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query a data set using GET and a query URL — get_dataset","text":"dataset_id ID data set connected . required endpoint one \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" indicators Indicators required string vector strings (required) time_periods Time periods required string (\"period|code\") vector strings geographic_levels Geographic levels required string vector strings locations Location code required string vector strings filter_items Filter items required string vector strings dataset_version Version data set connected api_version EES API version page Page number query results return page_size Number results return single query parse Logical flag activate parsing results. Default: TRUE verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query a data set using GET and a query URL — get_dataset","text":"Data frame containing query results API data set","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query a data set using GET and a query URL — get_dataset","text":"","code":"get_dataset(   example_id(),   geographic_levels = c(\"SCH\"),   filter_items = example_id(\"filter_item\"),   indicators = example_id(\"indicator\") ) #>    code    period geographic_level    LA   NAT   SCH f2GYF tu1Em PbNeb #> 1    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 9Rpn4 wEZcb  1777 #> 2    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 HJjXz wEZcb  1505 #> 3    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 7YbEX wEZcb  1505 #> 4    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 iNW86 wEZcb   510 #> 5    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 u9vRo wEZcb     z #> 6    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 XHEvf wEZcb    18 #> 7    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 LleUW wEZcb   524 #> 8    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 a2eWL wEZcb     z #> 9    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 Bfbf7 wEZcb     z #> 10   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 qGKqj wEZcb     z #> 11   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 dPff0 wEZcb   517 #> 12   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 C7DgI wEZcb   396 #> 13   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 p5IXS wEZcb   396 #> 14   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 6D2xr wEZcb   181 #> 15   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 TuzUP wEZcb     z #> 16   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 zvGnF wEZcb     z #> 17   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 OBNDC wEZcb  1259 #> 18   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 YFqfH wEZcb  1108 #> 19   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 IXQEB wEZcb  1108 #> 20   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 0eYST wEZcb   329 #> 21   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 cZ4i3 wEZcb     z #> 22   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 ka0Wh wEZcb     z"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a parsed version of the API response for a data set's meta data — get_meta","title":"Get a parsed version of the API response for a data set's meta data — get_meta","text":"Get list metadata information data set available EES API. Provides either look-tables human readable labels ids used API, raw response meta endpoint.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a parsed version of the API response for a data set's meta data — get_meta","text":"","code":"get_meta(   dataset_id,   dataset_version = NULL,   api_version = NULL,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a parsed version of the API response for a data set's meta data — get_meta","text":"dataset_id ID data set connected . required endpoint one \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" dataset_version Version data set connected api_version EES API version verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a parsed version of the API response for a data set's meta data — get_meta","text":"List data frames containing data set's meta data","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a parsed version of the API response for a data set's meta data — get_meta","text":"","code":"get_meta(example_id()) #> $time_periods #>   code    period   label #> 1   AY 2022/2023 2022/23 #>  #> $locations #>    item_id                          label      code oldCode geographic_level #> 1    ea0uS                        Croydon E09000008     306  Local authority #> 2    4c9UZ                        Enfield E09000010     308  Local authority #> 3    QIqwb                         Harrow E09000015     310  Local authority #> 4    rGcNj                          Leeds E08000035     383  Local authority #> 5    eLGuS                   Lincolnshire E10000019     925  Local authority #> 6    H0RzL                     Manchester E08000003     352  Local authority #> 7    VUG5X                       Somerset E10000027     933  Local authority #> 8    lrocB                    West Sussex E10000032     938  Local authority #> 9    jfhAM                           York E06000014     816  Local authority #> 10   dP0Zw                        England E92000001    <NA>         National #> 11   42nEU                 Bootham School      <NA>    <NA>           School #> 12   y8Jra           Brigshaw High School      <NA>    <NA>           School #> 13   k2qHh      Felpham Community College      <NA>    <NA>           School #> 14   mLJt9                 Loreto College      <NA>    <NA>           School #> 15   59BKd North London Collegiate School      <NA>    <NA>           School #> 16   dNu0Z             The Latymer School      <NA>    <NA>           School #> 17   0UXNT             The Laurels School      <NA>    <NA>           School #> 18   BzBp7      The Priory Ruskin Academy      <NA>    <NA>           School #> 19   hciHy    University Academy Holbeach      <NA>    <NA>           School #> 20   HS5ez          West Somerset College      <NA>    <NA>           School #>       urn laEstab #> 1    <NA>    <NA> #> 2    <NA>    <NA> #> 3    <NA>    <NA> #> 4    <NA>    <NA> #> 5    <NA>    <NA> #> 6    <NA>    <NA> #> 7    <NA>    <NA> #> 8    <NA>    <NA> #> 9    <NA>    <NA> #> 10   <NA>    <NA> #> 11 121722 8166000 #> 12 143238 3834113 #> 13 126080 9384059 #> 14 130503 3528601 #> 15 102257 3106075 #> 16 102055 3085400 #> 17 140356 3066028 #> 18 136194 9256910 #> 19 137282 9254001 #> 20 136791 9334291 #>  #> $filter_columns #>   col_id           col_name              label #> 1  tu1Em establishment_type establishment type #> 2  f2GYF               type               type #>  #> $filter_items #>    col_id             item_label item_id default_item #> 1   tu1Em      Academy Converter   9RpY4           NA #> 2   tu1Em    Academy Sponsor Led   23odl           NA #> 3   tu1Em       Community School   Poz7e           NA #> 4   tu1Em     Independent School   NwcLD           NA #> 5   tu1Em     Sixth Form College   wEZcb           NA #> 6   tu1Em Voluntary Aided School   o4vFm           NA #> 7   f2GYF                   1618   9Rpn4           NA #> 8   f2GYF               1618_DIS   dPff0           NA #> 9   f2GYF            1618_NOTDIS   OBNDC           NA #> 10  f2GYF                   ACAD   7YbEX           NA #> 11  f2GYF               ACAD_DIS   p5IXS           NA #> 12  f2GYF            ACAD_NOTDIS   IXQEB           NA #> 13  f2GYF                   AGEN   iNW86           NA #> 14  f2GYF               AGEN_DIS   6D2xr           NA #> 15  f2GYF            AGEN_NOTDIS   0eYST           NA #> 16  f2GYF              AGENDENOM   LleUW           NA #> 17  f2GYF                   ALEV   HJjXz           NA #> 18  f2GYF               ALEV_DIS   C7DgI           NA #> 19  f2GYF            ALEV_NOTDIS   YFqfH           NA #> 20  f2GYF               ANYL2VOC   qGKqj           NA #> 21  f2GYF              SCOPE_L3M   a2eWL           NA #> 22  f2GYF               TechCert   Bfbf7           NA #> 23  f2GYF           TechCert_DIS   zvGnF           NA #> 24  f2GYF        TechCert_NOTDIS   ka0Wh           NA #> 25  f2GYF                   TLEV   u9vRo           NA #> 26  f2GYF               TLEV_DIS   TuzUP           NA #> 27  f2GYF            TLEV_NOTDIS   cZ4i3           NA #> 28  f2GYF              TLEVDENOM   XHEvf           NA #>  #> $indicators #>   col_id             col_name                label #> 1  E40qF            ppe_value            ppe value #> 2  QuVwb         ppegrd_value         ppegrd value #> 3  9Aw4v retained_2ndyr_value retained 2ndyr value #> 4  2YIlz       retained_value       retained value #> 5  PbNeb    total_pupil_value    total pupil value #>"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the base API response for a data set's meta data — get_meta_response","title":"Get the base API response for a data set's meta data — get_meta_response","text":"Get metadata information data set available EES API.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the base API response for a data set's meta data — get_meta_response","text":"","code":"get_meta_response(   dataset_id,   dataset_version = NULL,   api_version = NULL,   parse = TRUE,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta_response.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the base API response for a data set's meta data — get_meta_response","text":"dataset_id ID data set connected . required endpoint one \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" dataset_version Version data set connected api_version EES API version parse Parse result structured list verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta_response.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the base API response for a data set's meta data — get_meta_response","text":"Results query API meta data endpoint","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_meta_response.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the base API response for a data set's meta data — get_meta_response","text":"","code":"get_meta_response(example_id()) #> $filters #>      id             column              label hint #> 1 tu1Em establishment_type establishment type      #> 2 f2GYF               type               type      #>                                                                                                                                                                                                                                                                                                                                                                                         options #> 1                                                                                                                                                                                                                            9RpY4, 23odl, Poz7e, NwcLD, wEZcb, o4vFm, Academy Converter, Academy Sponsor Led, Community School, Independent School, Sixth Form College, Voluntary Aided School #> 2 9Rpn4, dPff0, OBNDC, 7YbEX, p5IXS, IXQEB, iNW86, 6D2xr, 0eYST, LleUW, HJjXz, C7DgI, YFqfH, qGKqj, a2eWL, Bfbf7, zvGnF, ka0Wh, u9vRo, TuzUP, cZ4i3, XHEvf, 1618, 1618_DIS, 1618_NOTDIS, ACAD, ACAD_DIS, ACAD_NOTDIS, AGEN, AGEN_DIS, AGEN_NOTDIS, AGENDENOM, ALEV, ALEV_DIS, ALEV_NOTDIS, ANYL2VOC, SCOPE_L3M, TechCert, TechCert_DIS, TechCert_NOTDIS, TLEV, TLEV_DIS, TLEV_NOTDIS, TLEVDENOM #>  #> $indicators #>      id               column                label #> 1 E40qF            ppe_value            ppe value #> 2 QuVwb         ppegrd_value         ppegrd value #> 3 9Aw4v retained_2ndyr_value retained 2ndyr value #> 4 2YIlz       retained_value       retained value #> 5 PbNeb    total_pupil_value    total pupil value #>  #> $geographicLevels #>   code  label #> 1  SCH School #>  #> $locations #>   level.code     level.label #> 1         LA Local authority #> 2        NAT        National #> 3        SCH          School #>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  options #> 1                                                                                                                                                                                  ea0uS, 4c9UZ, QIqwb, rGcNj, eLGuS, H0RzL, VUG5X, lrocB, jfhAM, Croydon, Enfield, Harrow, Leeds, Lincolnshire, Manchester, Somerset, West Sussex, York, E09000008, E09000010, E09000015, E08000035, E10000019, E08000003, E10000027, E10000032, E06000014, 306, 308, 310, 383, 925, 352, 933, 938, 816 #> 2                                                                                                                                                                                                                                                                                                                                                                                                                                                              dP0Zw, England, E92000001 #> 3 42nEU, y8Jra, k2qHh, mLJt9, 59BKd, dNu0Z, 0UXNT, BzBp7, hciHy, HS5ez, Bootham School, Brigshaw High School, Felpham Community College, Loreto College, North London Collegiate School, The Latymer School, The Laurels School, The Priory Ruskin Academy, University Academy Holbeach, West Somerset College, 121722, 143238, 126080, 130503, 102257, 102055, 140356, 136194, 137282, 136791, 8166000, 3834113, 9384059, 3528601, 3106075, 3085400, 3066028, 9256910, 9254001, 9334291 #>  #> $timePeriods #>   code    period   label #> 1   AY 2022/2023 2022/23 #>"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_publications.html","id":null,"dir":"Reference","previous_headings":"","what":"Get publications — get_publications","title":"Get publications — get_publications","text":"Get publications","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_publications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get publications — get_publications","text":"","code":"get_publications(page_size = 40, page = NULL, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_publications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get publications — get_publications","text":"page_size Number results collect single query API (max 40) page Page number return (Default NULL loop pages query collated). verbose Add extra contextual information whilst running","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_publications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get publications — get_publications","text":"Data frame listing available publications","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/get_publications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get publications — get_publications","text":"","code":"get_publications() #>                                      id #> 1  b6d9ed96-be68-4791-abc3-08dcaba68c04 #> 2  82c3b19e-1060-4f5e-3410-08dc0b96cfea #> 3  8b657684-3b15-48d1-153b-08d9fa80c621 #> 4  0427bade-6d68-46bf-eadd-08dcd89c0dc5 #> 5  d823e4df-626f-4450-9b21-08dc8b95fc02 #> 6  2a1a743c-9da5-49e2-fb97-08dce75f2dbb #> 7  15f4cefb-7d43-4bc0-507e-08dceda89d2d #> 8  d12cb4ed-6d68-4b2d-50aa-08dceda89d2d #> 9  3de97aa6-8f78-4e5f-50ce-08dceda89d2d #> 10 fe1f9c47-715f-451c-50e3-08dceda89d2d #>                                                             title #> 1                                             Attendance API data #> 2                            CSV filename validation test-Updated #> 3                                         Nick's Test Publication #> 4                                                    Public API 2 #> 5                        Public API dataset testing-Updated title #> 6                                                 sv api test new #> 7  UI tests - Public API - preview token 20241016-061014-u0tsh4-0 #> 8  UI tests - Public API - preview token 20241016-061014-u0tsh4-1 #> 9  UI tests - Public API - preview token 20241016-061014-u0tsh4-2 #> 10 UI tests - Public API - preview token 20241016-061014-u0tsh4-3 #>                                                          slug #> 1                                         attendance-api-data #> 2                        csv-filename-validation-test-updated #> 3                                     nick-s-test-publication #> 4                                                public-api-2 #> 5                    public-api-dataset-testing-updated-title #> 6                                             sv-api-test-new #> 7  ui-tests-public-api-preview-token-20241016-061014-u0tsh4-0 #> 8  ui-tests-public-api-preview-token-20241016-061014-u0tsh4-1 #> 9  ui-tests-public-api-preview-token-20241016-061014-u0tsh4-2 #> 10 ui-tests-public-api-preview-token-20241016-061014-u0tsh4-3 #>                                                                   summary #> 1                         A place to demo tidy attendance data on the API #> 2                                                                    TEST #> 3                                                                         #> 4                                                                    asdf #> 5                                                                    test #> 6                                                                    test #> 7  UI tests - Public API - preview token 20241016-061014-u0tsh4-0 summary #> 8  UI tests - Public API - preview token 20241016-061014-u0tsh4-1 summary #> 9  UI tests - Public API - preview token 20241016-061014-u0tsh4-2 summary #> 10 UI tests - Public API - preview token 20241016-061014-u0tsh4-3 summary #>                        lastPublished #> 1  2024-09-17T11:13:41.8711175+00:00 #> 2  2024-10-14T11:57:51.3142157+00:00 #> 3  2022-11-08T22:47:26.2316722+00:00 #> 4  2024-09-19T15:48:16.1376152+00:00 #> 5  2024-10-09T12:00:43.9538526+00:00 #> 6  2024-10-15T10:42:43.7291296+00:00 #> 7  2024-10-16T06:14:15.1475552+00:00 #> 8  2024-10-16T06:23:32.9953579+00:00 #> 9  2024-10-16T06:32:27.4237216+00:00 #> 10 2024-10-16T06:41:00.8197776+00:00"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/http_request_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Contextualise http request errors — http_request_error","title":"Contextualise http request errors — http_request_error","text":"Translate http error code error message.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/http_request_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contextualise http request errors — http_request_error","text":"","code":"http_request_error(response, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/http_request_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contextualise http request errors — http_request_error","text":"response HTTP response API, form list status element containing 3 digit HTTP response code verbose Run verbose mode, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/http_request_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contextualise http request errors — http_request_error","text":"Translation response code","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/http_request_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contextualise http request errors — http_request_error","text":"","code":"http_request_error(list(status = 200)) #> [1] \"Successful API request.\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_api_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse contents of API data set json output — parse_api_dataset","title":"Parse contents of API data set json output — parse_api_dataset","text":"takes json results output API converts usable data frame. primary use helper get_dataset post_dataset, can used isolation running API query passing following parse_api_dataset(): response |> httr::content(\"text\") |> jsonlite::fromJSON() |> parse_api_dataset()","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_api_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse contents of API data set json output — parse_api_dataset","text":"","code":"parse_api_dataset(api_data_result, dataset_id = NULL, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_api_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse contents of API data set json output — parse_api_dataset","text":"api_data_result json data result list returned API dataset_id ID data set connected . verbose Run verbose mode, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_api_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse contents of API data set json output — parse_api_dataset","text":"Data frame containing API data results","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_api_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse contents of API data set json output — parse_api_dataset","text":"","code":"api_url(   \"get-data\",   dataset_id = example_id(), indicators = example_id(\"indicator\"), page_size = 10 ) |>   httr::GET() |>   httr::content(\"text\") |>   jsonlite::fromJSON() |>   parse_api_dataset() #>    code    period geographic_level    LA   NAT   SCH f2GYF tu1Em PbNeb #> 1    AY 2022/2023              SCH QIqwb dP0Zw 59BKd 9Rpn4 NwcLD   108 #> 2    AY 2022/2023              SCH QIqwb dP0Zw 59BKd HJjXz NwcLD    89 #> 3    AY 2022/2023              SCH QIqwb dP0Zw 59BKd 7YbEX NwcLD   108 #> 4    AY 2022/2023              SCH QIqwb dP0Zw 59BKd iNW86 NwcLD     z #> 5    AY 2022/2023              SCH QIqwb dP0Zw 59BKd u9vRo NwcLD     z #> 6    AY 2022/2023              SCH QIqwb dP0Zw 59BKd XHEvf NwcLD     z #> 7    AY 2022/2023              SCH QIqwb dP0Zw 59BKd LleUW NwcLD     z #> 8    AY 2022/2023              SCH QIqwb dP0Zw 59BKd a2eWL NwcLD     z #> 9    AY 2022/2023              SCH QIqwb dP0Zw 59BKd Bfbf7 NwcLD     z #> 10   AY 2022/2023              SCH QIqwb dP0Zw 59BKd qGKqj NwcLD     z"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse API meta to give the filter columns — parse_meta_filter_columns","title":"Parse API meta to give the filter columns — parse_meta_filter_columns","text":"Parse API meta give filter columns","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse API meta to give the filter columns — parse_meta_filter_columns","text":"","code":"parse_meta_filter_columns(api_meta_filters, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse API meta to give the filter columns — parse_meta_filter_columns","text":"api_meta_filters Filter information provided API output verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse API meta to give the filter columns — parse_meta_filter_columns","text":"data frame containing column names labels","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse API meta to give the filter columns — parse_meta_filter_columns","text":"","code":"get_meta_response(example_id())$filters |>   parse_meta_filter_columns() #>   col_id           col_name              label #> 1  tu1Em establishment_type establishment type #> 2  f2GYF               type               type"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_item_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse API meta to give the filter item codes — parse_meta_filter_item_ids","title":"Parse API meta to give the filter item codes — parse_meta_filter_item_ids","text":"Parse API meta give filter item codes","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_item_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse API meta to give the filter item codes — parse_meta_filter_item_ids","text":"","code":"parse_meta_filter_item_ids(api_meta_filters, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_item_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse API meta to give the filter item codes — parse_meta_filter_item_ids","text":"api_meta_filters Filter information provided API output verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_item_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse API meta to give the filter item codes — parse_meta_filter_item_ids","text":"Data frame containing filter item codes matched filter item labels col_name","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_filter_item_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse API meta to give the filter item codes — parse_meta_filter_item_ids","text":"","code":"get_meta_response(example_id())$filters |>   parse_meta_filter_item_ids() #>    col_id             item_label item_id default_item #> 1   tu1Em      Academy Converter   9RpY4           NA #> 2   tu1Em    Academy Sponsor Led   23odl           NA #> 3   tu1Em       Community School   Poz7e           NA #> 4   tu1Em     Independent School   NwcLD           NA #> 5   tu1Em     Sixth Form College   wEZcb           NA #> 6   tu1Em Voluntary Aided School   o4vFm           NA #> 7   f2GYF                   1618   9Rpn4           NA #> 8   f2GYF               1618_DIS   dPff0           NA #> 9   f2GYF            1618_NOTDIS   OBNDC           NA #> 10  f2GYF                   ACAD   7YbEX           NA #> 11  f2GYF               ACAD_DIS   p5IXS           NA #> 12  f2GYF            ACAD_NOTDIS   IXQEB           NA #> 13  f2GYF                   AGEN   iNW86           NA #> 14  f2GYF               AGEN_DIS   6D2xr           NA #> 15  f2GYF            AGEN_NOTDIS   0eYST           NA #> 16  f2GYF              AGENDENOM   LleUW           NA #> 17  f2GYF                   ALEV   HJjXz           NA #> 18  f2GYF               ALEV_DIS   C7DgI           NA #> 19  f2GYF            ALEV_NOTDIS   YFqfH           NA #> 20  f2GYF               ANYL2VOC   qGKqj           NA #> 21  f2GYF              SCOPE_L3M   a2eWL           NA #> 22  f2GYF               TechCert   Bfbf7           NA #> 23  f2GYF           TechCert_DIS   zvGnF           NA #> 24  f2GYF        TechCert_NOTDIS   ka0Wh           NA #> 25  f2GYF                   TLEV   u9vRo           NA #> 26  f2GYF               TLEV_DIS   TuzUP           NA #> 27  f2GYF            TLEV_NOTDIS   cZ4i3           NA #> 28  f2GYF              TLEVDENOM   XHEvf           NA"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_location_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse API meta to give the locations — parse_meta_location_ids","title":"Parse API meta to give the locations — parse_meta_location_ids","text":"Parse API meta give locations","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_location_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse API meta to give the locations — parse_meta_location_ids","text":"","code":"parse_meta_location_ids(api_meta_locations, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_location_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse API meta to give the locations — parse_meta_location_ids","text":"api_meta_locations Locations information provided API output verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_location_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse API meta to give the locations — parse_meta_location_ids","text":"Data frame containing location item codes matched","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_location_ids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse API meta to give the locations — parse_meta_location_ids","text":"","code":"get_meta_response(example_id())$locations |>   parse_meta_location_ids() #>    item_id                          label      code oldCode geographic_level #> 1    ea0uS                        Croydon E09000008     306  Local authority #> 2    4c9UZ                        Enfield E09000010     308  Local authority #> 3    QIqwb                         Harrow E09000015     310  Local authority #> 4    rGcNj                          Leeds E08000035     383  Local authority #> 5    eLGuS                   Lincolnshire E10000019     925  Local authority #> 6    H0RzL                     Manchester E08000003     352  Local authority #> 7    VUG5X                       Somerset E10000027     933  Local authority #> 8    lrocB                    West Sussex E10000032     938  Local authority #> 9    jfhAM                           York E06000014     816  Local authority #> 10   dP0Zw                        England E92000001    <NA>         National #> 11   42nEU                 Bootham School      <NA>    <NA>           School #> 12   y8Jra           Brigshaw High School      <NA>    <NA>           School #> 13   k2qHh      Felpham Community College      <NA>    <NA>           School #> 14   mLJt9                 Loreto College      <NA>    <NA>           School #> 15   59BKd North London Collegiate School      <NA>    <NA>           School #> 16   dNu0Z             The Latymer School      <NA>    <NA>           School #> 17   0UXNT             The Laurels School      <NA>    <NA>           School #> 18   BzBp7      The Priory Ruskin Academy      <NA>    <NA>           School #> 19   hciHy    University Academy Holbeach      <NA>    <NA>           School #> 20   HS5ez          West Somerset College      <NA>    <NA>           School #>       urn laEstab #> 1    <NA>    <NA> #> 2    <NA>    <NA> #> 3    <NA>    <NA> #> 4    <NA>    <NA> #> 5    <NA>    <NA> #> 6    <NA>    <NA> #> 7    <NA>    <NA> #> 8    <NA>    <NA> #> 9    <NA>    <NA> #> 10   <NA>    <NA> #> 11 121722 8166000 #> 12 143238 3834113 #> 13 126080 9384059 #> 14 130503 3528601 #> 15 102257 3106075 #> 16 102055 3085400 #> 17 140356 3066028 #> 18 136194 9256910 #> 19 137282 9254001 #> 20 136791 9334291"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_time_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse API meta to give the time periods — parse_meta_time_periods","title":"Parse API meta to give the time periods — parse_meta_time_periods","text":"Parse API meta give time periods","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_time_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse API meta to give the time periods — parse_meta_time_periods","text":"","code":"parse_meta_time_periods(api_meta_time_periods, verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_time_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse API meta to give the time periods — parse_meta_time_periods","text":"api_meta_time_periods Time periods information provided API output verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_time_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse API meta to give the time periods — parse_meta_time_periods","text":"Data frame containing location item codes matched","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_meta_time_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse API meta to give the time periods — parse_meta_time_periods","text":"","code":"get_meta_response(example_id())$timePeriods |>   parse_meta_time_periods() #>   code    period   label #> 1   AY 2022/2023 2022/23"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a combination-filter query to json — parse_tojson_filter","title":"Parse a combination-filter query to json — parse_tojson_filter","text":"Create json query sub-string based combination \\\"\\\" \\\"\\\" constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a combination-filter query to json — parse_tojson_filter","text":"","code":"parse_tojson_filter(items, filter_type = \"filter_items\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a combination-filter query to json — parse_tojson_filter","text":"items items included \"\" statement filter_type type filter queried: \"time_periods\", \"geographic_levels\", \"locations\" \"filter_items\"","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a combination-filter query to json — parse_tojson_filter","text":"String containing json form query \\\"\\\"-combination different filter selections","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a combination-filter query to json — parse_tojson_filter","text":"","code":"parse_tojson_filter(   list(     day_number = c(\"uLQo4\", \"qf0jG\", \"aMjLP\"),     reason = c(\"bBrtT\", \"ThjPJ\", \"hsHyW\", \"m2m9K\"),     education_phase = c(\"5UNdi\", \"crH31\")   ) ) |>   cat() #> { #> \"and\": [ #>     { #>       \"filters\": { #>         \"in\": [ #>           \"uLQo4\", #>           \"qf0jG\", #>           \"aMjLP\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"bBrtT\", #>           \"ThjPJ\", #>           \"hsHyW\", #>           \"m2m9K\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"5UNdi\", #>           \"crH31\" #>         ] #>       } #>     } #> ] #> }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_eq.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a filter-equal type query to json — parse_tojson_filter_eq","title":"Parse a filter-equal type query to json — parse_tojson_filter_eq","text":"Create json query sub-string based filter-equal constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_eq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a filter-equal type query to json — parse_tojson_filter_eq","text":"","code":"parse_tojson_filter_eq(items, filter_type = \"filter_items\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_eq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a filter-equal type query to json — parse_tojson_filter_eq","text":"items items included \"\" statement filter_type type filter queried: \"time_periods\", \"geographic_levels\", \"locations\" \"filter_items\"","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_eq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a filter-equal type query to json — parse_tojson_filter_eq","text":"String containing json form query based filter-equal-constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_eq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a filter-equal type query to json — parse_tojson_filter_eq","text":"","code":"parse_tojson_filter_eq(\"NAT\", filter_type = \"geographic_levels\") |> cat() #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a filter-in type query to json — parse_tojson_filter_in","title":"Parse a filter-in type query to json — parse_tojson_filter_in","text":"Create json query sub-string based filter-constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a filter-in type query to json — parse_tojson_filter_in","text":"","code":"parse_tojson_filter_in(items, filter_type = \"filter_items\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a filter-in type query to json — parse_tojson_filter_in","text":"items items included \"\" statement filter_type type filter queried: \"time_periods\", \"geographic_levels\", \"locations\" \"filter_items\"","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a filter-in type query to json — parse_tojson_filter_in","text":"String containing json form query based filter-constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_filter_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a filter-in type query to json — parse_tojson_filter_in","text":"","code":"parse_tojson_filter_in(c(\"NAT\", \"REG\"), filter_type = \"geographic_levels\") #> [1] \"    {\\n      \\\"geographicLevels\\\": {\\n        \\\"in\\\": [\\n          \\\"NAT\\\",\\n          \\\"REG\\\"\\n        ]\\n      }\\n    }\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_geographies.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse geographies to json — parse_tojson_geographies","title":"Parse geographies to json — parse_tojson_geographies","text":"Create json query sub-string based location constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_geographies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse geographies to json — parse_tojson_geographies","text":"","code":"parse_tojson_geographies(geographies)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_geographies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse geographies to json — parse_tojson_geographies","text":"geographies String, vector data frame containing geographic levels locations queried.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_geographies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse geographies to json — parse_tojson_geographies","text":"String containing json form query geographies","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_geographies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse geographies to json — parse_tojson_geographies","text":"","code":"parse_tojson_geographies(c(\"NAT\", \"REG\")) |>   cat() #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"REG\" #>           } #>         } #>   ] #>   } #>     ] #>   } parse_tojson_geographies(c(\"NAT|id|dP0Zw\", \"REG|id|rg3Nj\")) |>   cat() #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"id\": \"dP0Zw\" #>           } #>         ] #>       } #>     } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"REG\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"REG\", #>             \"id\": \"rg3Nj\" #>           } #>         ] #>       } #>     } #>   ] #>   } #>     ] #>   } parse_tojson_geographies(c(\"NAT|id|dP0Zw\", \"REG\")) |>   cat() #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"id\": \"dP0Zw\" #>           } #>         ] #>       } #>     } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"REG\" #>           } #>         } #>   ] #>   } #>     ] #>   } parse_tojson_geographies(c(\"NAT|id|dP0Zw\", \"REG\")) |>   cat() #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"id\": \"dP0Zw\" #>           } #>         ] #>       } #>     } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"REG\" #>           } #>         } #>   ] #>   } #>     ] #>   }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse an indicator-in type query to json — parse_tojson_indicators","title":"Parse an indicator-in type query to json — parse_tojson_indicators","text":"Create json query sub-string based indicator-constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_indicators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse an indicator-in type query to json — parse_tojson_indicators","text":"","code":"parse_tojson_indicators(indicators)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse an indicator-in type query to json — parse_tojson_indicators","text":"indicators String vector strings containing indicator ids","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse an indicator-in type query to json — parse_tojson_indicators","text":"json query string select set indicators","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse an indicator-in type query to json — parse_tojson_indicators","text":"","code":"parse_tojson_indicators(example_id(\"indicator\")) |>   cat() #>  #> \"indicators\": [ #>   \"PbNeb\" #> ]"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Create json location search string from geographies — parse_tojson_location","title":"Create json location search string from geographies — parse_tojson_location","text":"Create json location search string geographies","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create json location search string from geographies — parse_tojson_location","text":"","code":"parse_tojson_location(geographies, include_comma = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create json location search string from geographies — parse_tojson_location","text":"geographies Vector data frame search geographies include_comma Include comma return strings (logical)","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create json location search string from geographies — parse_tojson_location","text":"Vector strings containing json location search string","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create json location search string from geographies — parse_tojson_location","text":"","code":"parse_tojson_location(example_geography_query()) |> cat() #>  #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"code\": \"E92000001\" #>           } #>         ] #>       } #>     }  #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"REG\", #>             \"code\": \"E12000002\" #>           } #>         ] #>       } #>     }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a json query — parse_tojson_params","title":"Create a json query — parse_tojson_params","text":"Creates json query use POST-ing query API. takes time period, geography, filter item indicator criteria produces working json query single string. result can used directly post_dataset() output parse_tojson_params(...) |> cat() can copied pasted \"body\" content API connection software (Postman) POST query EES API.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a json query — parse_tojson_params","text":"","code":"parse_tojson_params(   indicators,   time_periods = NULL,   geographies = NULL,   filter_items = NULL,   page = 1,   page_size = 1000,   debug = FALSE,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a json query — parse_tojson_params","text":"indicators Indicators required string vector strings (required) time_periods Time periods required string (\"period|code\") vector strings geographies String, vector data frame containing geographic levels locations queried. filter_items Filter items required string vector strings page Page number query results return page_size Number results return single query debug Run POST query debug mode: logic, default: FALSE verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a json query — parse_tojson_params","text":"String containing json query body use http POST request","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_params.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a json query — parse_tojson_params","text":"","code":"parse_tojson_params(example_id(\"indicator\")) |>   cat() #> { #>  #> \"indicators\": [ #>   \"PbNeb\" #> ], #> \"debug\": false, #> \"page\": 1, #> \"pageSize\": 1000 #> }  parse_tojson_params(   example_id(\"indicator\"),   time_periods = \"2024|W23\",   geographies = c(\"NAT|id|dP0Zw\", \"REG|id|rg3Nj\"),   filter_items = c(\"pmRSo\", \"7SdXo\") ) |>   cat() #> { #> \"criteria\": { #>   \"and\": [ #>     { #>       \"timePeriods\": { #>         \"in\": [ #>           { #>             \"period\": \"2024\", #>             \"code\": \"W23\" #>           } #>         ] #>       } #>     }, #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"id\": \"dP0Zw\" #>           } #>         ] #>       } #>     } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"REG\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"REG\", #>             \"id\": \"rg3Nj\" #>           } #>         ] #>       } #>     } #>   ] #>   } #>     ] #>   }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"pmRSo\", #>           \"7SdXo\" #>         ] #>       } #>     } #>   ] #> }, #> \"indicators\": [ #>   \"PbNeb\" #> ], #> \"debug\": false, #> \"page\": 1, #> \"pageSize\": 1000 #> }  # Create a geographies data frame to find both of: #   - England national level data #   - all LAs in a specified region (\"E12000004\") dfgeographies <- data.frame(   return_level = c(\"NAT\", \"LA\"),   search_level = c(\"NAT\", \"REG\"),   identifier_type = c(\"code\", \"code\"),   identifier = c(\"E92000001\", \"E12000004\") )  parse_tojson_params(   example_id(\"indicator\"),   time_periods = \"2024|W23\",   geographies = dfgeographies,   filter_items = c(\"pmRSo\") ) |>   cat() #> { #> \"criteria\": { #>   \"and\": [ #>     { #>       \"timePeriods\": { #>         \"in\": [ #>           { #>             \"period\": \"2024\", #>             \"code\": \"W23\" #>           } #>         ] #>       } #>     }, #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"code\": \"E92000001\" #>           } #>         ] #>       } #>     } #>   ] #>   }, #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"LA\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"REG\", #>             \"code\": \"E12000004\" #>           } #>         ] #>       } #>     } #>   ] #>   } #>     ] #>   }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"pmRSo\" #>         ] #>       } #>     } #>   ] #> }, #> \"indicators\": [ #>   \"PbNeb\" #> ], #> \"debug\": false, #> \"page\": 1, #> \"pageSize\": 1000 #> }  # Create a filter list to find the combination of: #   - day_number is in c(\"uLQo4\", \"qf0jG\", \"aMjLP\") *and* #   - reason is in c(\"bBrtT\", \"ThjPJ\", \"hsHyW\", \"m2m9K\") *and* #   - education_phase is in c(\"5UNdi\", \"crH31\") filter_list <- list(   day_number = c(\"uLQo4\", \"qf0jG\", \"aMjLP\"),   reason = c(\"bBrtT\", \"ThjPJ\", \"hsHyW\", \"m2m9K\"),   education_phase = c(\"5UNdi\", \"crH31\") )  parse_tojson_params(   example_id(\"indicator\"),   time_periods = \"2024|W23\",   geographies = \"NAT|code|E92000001\",   filter_items = filter_list ) |>   cat() #> { #> \"criteria\": { #>   \"and\": [ #>     { #>       \"timePeriods\": { #>         \"in\": [ #>           { #>             \"period\": \"2024\", #>             \"code\": \"W23\" #>           } #>         ] #>       } #>     }, #>     { #>       \"or\": [ #>         { #>           \"and\": [ #>         { #>           \"geographicLevels\": { #>             \"eq\": \"NAT\" #>           } #>         }, #>     { #>       \"locations\": { #>         \"in\": [ #>           { #>             \"level\": \"NAT\", #>             \"code\": \"E92000001\" #>           } #>         ] #>       } #>     } #>   ] #>   } #>     ] #>   }, #> { #> \"and\": [ #>     { #>       \"filters\": { #>         \"in\": [ #>           \"uLQo4\", #>           \"qf0jG\", #>           \"aMjLP\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"bBrtT\", #>           \"ThjPJ\", #>           \"hsHyW\", #>           \"m2m9K\" #>         ] #>       } #>     }, #>     { #>       \"filters\": { #>         \"in\": [ #>           \"5UNdi\", #>           \"crH31\" #>         ] #>       } #>     } #> ] #> } #>   ] #> }, #> \"indicators\": [ #>   \"PbNeb\" #> ], #> \"debug\": false, #> \"page\": 1, #> \"pageSize\": 1000 #> }"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_time_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse time_periods to json — parse_tojson_time_periods","title":"Parse time_periods to json — parse_tojson_time_periods","text":"Create json query sub-string based time periods constraints","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_time_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse time_periods to json — parse_tojson_time_periods","text":"","code":"parse_tojson_time_periods(time_periods)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_time_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse time_periods to json — parse_tojson_time_periods","text":"time_periods Time periods required string (\"period|code\") vector strings","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_time_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse time_periods to json — parse_tojson_time_periods","text":"String containing json form query time periods","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tojson_time_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse time_periods to json — parse_tojson_time_periods","text":"","code":"parse_tojson_time_periods(c(\"2023|W25\", \"2024|W12\")) #> [1] \"    {\\n      \\\"timePeriods\\\": {\\n        \\\"in\\\": [\\n          {\\n            \\\"period\\\": \\\"2023\\\",\\n            \\\"code\\\": \\\"W25\\\"\\n          },\\n          {\\n            \\\"period\\\": \\\"2024\\\",\\n            \\\"code\\\": \\\"W12\\\"\\n          }\\n        ]\\n      }\\n    }\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tourl_filter_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Create .in query string for URL queries — parse_tourl_filter_in","title":"Create .in query string for URL queries — parse_tourl_filter_in","text":"Outputs URL query string containing timePeriods.=..., geographicLevels.=..., etc use querying data set via GET.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tourl_filter_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create .in query string for URL queries — parse_tourl_filter_in","text":"","code":"parse_tourl_filter_in(items, filter_type)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tourl_filter_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create .in query string for URL queries — parse_tourl_filter_in","text":"items items included \"\" statement filter_type type filter queried: \"time_periods\", \"geographic_levels\", \"locations\" \"filter_items\"","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tourl_filter_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create .in query string for URL queries — parse_tourl_filter_in","text":"Query string use URL based API queries","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/parse_tourl_filter_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create .in query string for URL queries — parse_tourl_filter_in","text":"","code":"parse_tourl_filter_in(c(\"2024|W11\", \"2024|W12\"), filter_type = \"time_periods\") #> [1] \"timePeriods.in=2024|W11%2C2024|W12&\""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/post_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Query a data set using POST and a query json — post_dataset","title":"Query a data set using POST and a query json — post_dataset","text":"function provides method generating sending json based data query EES API. minimum, requires dataset_id flag either indicators flag json file containing query provided.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/post_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query a data set using POST and a query json — post_dataset","text":"","code":"post_dataset(   dataset_id,   indicators = NULL,   time_periods = NULL,   geographies = NULL,   filter_items = NULL,   json_query = NULL,   dataset_version = NULL,   api_version = NULL,   page = NULL,   page_size = 1000,   parse = TRUE,   debug = FALSE,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/post_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query a data set using POST and a query json — post_dataset","text":"dataset_id ID data set connected . required endpoint one \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" indicators Indicators required string vector strings (required) time_periods Time periods required string (\"period|code\") vector strings geographies String, vector data frame containing geographic levels locations queried. filter_items Filter items required string vector strings json_query Optional path json file containing query parameters dataset_version Version data set connected api_version EES API version page Page number query results return page_size Number results return single query parse Logical flag activate parsing results. Default: TRUE debug Run POST query debug mode: logic, default: FALSE verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/post_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query a data set using POST and a query json — post_dataset","text":"Data frame containing query results API data set","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/post_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query a data set using POST and a query json — post_dataset","text":"","code":"post_dataset(   example_id(group = \"attendance\"),   json_query = example_json_query() ) #> Parsing query options #>   code period geographic_level   NAT   REG Db3Qe emJuS 4kdUZ 5TYdi mU59K #> 1  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 2  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf ThDPJ uLQo4 bBrtT #> 3  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 uLQo4 bBrtT #> 4  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 uLQo4 bBrtT #> 5  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 uLQo4 bBrtT #> 6  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 uLQo4 bBrtT #> 7  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId ThDPJ uLQo4 bBrtT #> 8  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf ThDPJ uLQo4 bBrtT #>        bqZtT #> 1    1862256 #> 2      35007 #> 3      74898 #> 4       1020 #> 5     870024 #> 6      17506 #> 7   20145467 #> 8     401209  # Run post_dataset() to select rows containing either of two geographic locations and either of # two filter items. post_dataset(   example_id(group = \"attendance\"),   indicators = example_id(\"indicator\", group = \"attendance\"),   time_periods = \"2024|W23\",   geographies = c(\"NAT|id|dP0Zw\", \"REG|id|rg3Nj\"),   filter_items = c(\"CvuId\", \"6AXrf\"),   page = 1,   page_size = 32 ) #>    code period geographic_level   NAT   REG Db3Qe emJuS 4kdUZ 5TYdi mU59K #> 1   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG bBrtT #> 2   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG bBrtT #> 3   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG GzNgr #> 4   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG 3Nk8u #> 5   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG rGcNj #> 6   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG PyBeb #> 7   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG t74Em #> 8   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG jYyAM #> 9   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG oWvmX #> 10  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG ea0uS #> 11  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG 5USdi #> 12  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG bBrtT #> 13  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG bBrtT #> 14  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG GzNgr #> 15  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG 3Nk8u #> 16  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG rGcNj #> 17  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG PyBeb #> 18  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG t74Em #> 19  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG jYyAM #> 20  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG oWvmX #> 21  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG ea0uS #> 22  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG 5USdi #> 23  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG bBrtT #> 24  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG bBrtT #> 25  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG GzNgr #> 26  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG 3Nk8u #> 27  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG rGcNj #> 28  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG PyBeb #> 29  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG t74Em #> 30  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG jYyAM #> 31  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG oWvmX #> 32  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG ea0uS #>         bqZtT #> 1      475991 #> 2        5235 #> 3      234417 #> 4      236991 #> 5      471408 #> 6        4583 #> 7         452 #> 8         226 #> 9         552 #> 10       4225 #> 11          0 #> 12      14497 #> 13        130 #> 14       7206 #> 15       7203 #> 16      14409 #> 17         88 #> 18        103 #> 19         26 #> 20          1 #> 21         24 #> 22          0 #> 23     157670 #> 24       2611 #> 25      77609 #> 26      78597 #> 27     156206 #> 28       1464 #> 29       2132 #> 30        287 #> 31         46 #> 32        343  # Run post_dataset() using set parameters giving a combination of filter options post_dataset(   example_id(group = \"attendance\"),   indicators = example_id(\"indicator\", group = \"attendance\"),   time_periods = \"2024|W23\",   geographies = c(\"NAT|id|dP0Zw\", \"REG|id|rg3Nj\"),   filter_items = list(     attendance_status = c(\"pmRSo\", \"7SdXo\"),     attendance_type = c(\"CvuId\", \"6AXrf\", \"0k3T5\", \"YdkHK\"),     education_phase = c(\"ThDPJ\", \"crH31\"),     day_number = c(\"uLQo4\"),     reason = c(\"bBrtT\")   ) ) #>    code period geographic_level   NAT   REG 5TYdi mU59K Db3Qe emJuS 4kdUZ #> 1   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT pmRSo CvuId ThDPJ #> 2   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT pmRSo 6AXrf ThDPJ #> 3   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT 7SdXo 0k3T5 ThDPJ #> 4   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT 7SdXo YdkHK ThDPJ #> 5   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT pmRSo CvuId crH31 #> 6   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT pmRSo 6AXrf crH31 #> 7   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT 7SdXo 0k3T5 crH31 #> 8   W23   2024              REG dP0Zw rg3Nj uLQo4 bBrtT 7SdXo YdkHK crH31 #> 9   W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT pmRSo CvuId crH31 #> 10  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT pmRSo 6AXrf crH31 #> 11  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT 7SdXo 0k3T5 crH31 #> 12  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT 7SdXo YdkHK crH31 #> 13  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT pmRSo CvuId ThDPJ #> 14  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT pmRSo 6AXrf ThDPJ #> 15  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT 7SdXo 0k3T5 ThDPJ #> 16  W23   2024              NAT dP0Zw  <NA> uLQo4 bBrtT 7SdXo YdkHK ThDPJ #>         bqZtT #> 1     1862256 #> 2       35007 #> 3      105543 #> 4       83756 #> 5       74898 #> 6        1020 #> 7        7905 #> 8        2871 #> 9      870024 #> 10      17506 #> 11      88094 #> 12      37748 #> 13   20145467 #> 14     401209 #> 15    1093633 #> 16     956076"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Query a data set — query_dataset","title":"Query a data set — query_dataset","text":"Create send query EES API. Queries can supplied run one 4 ways: Supplying json query file sent POST method. Supplying json query string variable sent POST method. Supplying parameters (time_periods, geographies, filter_items, indicators) build json query sent POST method. Supplying parameters (time_periods, geographies, filter_items, indicators) build json query sent GET method. cases, data set id must supplied explicitly using dataset_id. Details format parameter latter two methods follows.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"indicators","dir":"Reference","previous_headings":"","what":"indicators","title":"Query a data set — query_dataset","text":"must supplied vector sqids, can identified meta data using get_meta().","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"time-periods","dir":"Reference","previous_headings":"","what":"time_periods","title":"Query a data set — query_dataset","text":"Time periods supplied vector periods codes form: \"period|code\" example, selecting 2023 2024 academic years require: time_period = c(\"2023|AY\", \"2024|AY\")","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"geographies","dir":"Reference","previous_headings":"","what":"geographies","title":"Query a data set — query_dataset","text":"Geographies can supplied vector data frame depending complexity desired query. vector run query returning rows meeting given geographies, .e. geographies = c(\"NAT\", \"REG\") return national regional level rows, whilst c(\"NAT\", \"REG|code|E120000001\") return national level rows North East rows. Specific locations required supplied format \"LEVEL|identifier_type|identifier\", identifier type can either code id corresponding identifier standard ONS code sqid given meta data respectively. Using England example, : \"NAT|code|E92000001\" \"NAT|id|dP0Zw\" require complex selection, example LAs given region, data frame supplied, row selection. Note however, work using default POST method. GET method much limited can process complex queries. geography query data frame contain following columns: return_level: geographic level return (e.g. LA example ). search_level: geographic level search location (e.g. REG example ). identifier_type: \"code\" \"id\". identifier: code id (sqid) search location (e.g. code sqid region example). rows can added add geography searches include results. example working geographies data frame can obtained using example_geography_query().","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"filter-items","dir":"Reference","previous_headings":"","what":"filter_items","title":"Query a data set — query_dataset","text":"Similarly geographies, criteria querying filter items can provided either via vector simple queries , complex queries, list. cases, vector list, filter items can supplied sqids, .e. ids found meta data using get_meta(dataset_id). Providing vector sqids effectively run query returning rows containing listed sqids. therefore allow narrow searches based row set rows matching multiple criteria. Providing list structure can provide narrow query selecting individual rows based combination criteria. example want rows contain sqid1 one column sqid2 another, pass list : filter_query <- list(column1 = c(\"sqid1\"), column2 = c(\"sqid2\")) Note naming entries list necessary, may help creating readable code. wish create query whereby receive rows containing sqid1 column 1 sqid2 sqid3 column 2, required list : filter_query <- list(column1 = c(\"sqid1\"), column2 = c(\"sqid2\", \"sqid3\")) way, can build combinations criteria query across multiple filter columns. Note complex querying using list variable function using POST method.","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"controlling-paging","dir":"Reference","previous_headings":"","what":"Controlling paging","title":"Query a data set — query_dataset","text":"can request specific set rows using page page_size parameters. Keeping default page = NULL return rows matching query. Setting page page_size numerical values attempt return subset rows, page_size defining number rows page defining subset rows return query (.e. page = 1, page_size = 20 return first 20 rows, page = 2 page_size = 20 return second 20 rows ).","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query a data set — query_dataset","text":"","code":"query_dataset(   dataset_id,   indicators = NULL,   time_periods = NULL,   geographies = NULL,   geographic_levels = NULL,   locations = NULL,   filter_items = NULL,   json_query = NULL,   method = \"POST\",   dataset_version = NULL,   api_version = NULL,   page_size = 1000,   page = NULL,   debug = FALSE,   verbose = FALSE )"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query a data set — query_dataset","text":"dataset_id ID data set connected . required endpoint one \"get-summary\", \"get-meta\", \"get-data\" \"post-data\" indicators Indicators required string vector strings (required) time_periods Time periods required string (\"period|code\") vector strings geographies String, vector data frame containing geographic levels locations queried. geographic_levels Geographic levels required string vector strings locations Location code required string vector strings filter_items Filter items required string vector strings json_query Optional path json file containing query parameters method API query method used. Can  \"POST\" \"GET\". Default: \"POST\". dataset_version Version data set connected api_version EES API version page_size Number results return single query page Page number query results return debug Run POST query debug mode: logic, default: FALSE verbose Run additional contextual messaging, logical, default = FALSE","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query a data set — query_dataset","text":"Data frame containing query results","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/query_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query a data set — query_dataset","text":"","code":"# Run query_dataset() using a json query string input to json_query (this can also be done by # passing a filename of a file containing your json query string). query_dataset(   example_id(group = \"attendance\"),   json_query = example_json_query() ) #> Parsing query options #>   code period geographic_level   NAT   REG Db3Qe emJuS 4kdUZ 5TYdi mU59K #> 1  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 2  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf ThDPJ uLQo4 bBrtT #> 3  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 uLQo4 bBrtT #> 4  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 uLQo4 bBrtT #> 5  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 uLQo4 bBrtT #> 6  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 uLQo4 bBrtT #> 7  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId ThDPJ uLQo4 bBrtT #> 8  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf ThDPJ uLQo4 bBrtT #>        bqZtT #> 1    1862256 #> 2      35007 #> 3      74898 #> 4       1020 #> 5     870024 #> 6      17506 #> 7   20145467 #> 8     401209  # If you don't want to have tio write your own json query, the rest of the examples illustrate # how to use query_dataset() with parameters to construct queries in R.  # Run query_dataset() to select rows containing either of two geographic locations and either of # two filter items. query_dataset(   example_id(group = \"attendance\"),   indicators = example_id(\"indicator\", group = \"attendance\"),   time_periods = \"2024|W23\",   geographies = c(\"NAT|id|dP0Zw\", \"REG|id|rg3Nj\"),   filter_items = c(\"CvuId\", \"6AXrf\"),   page = 1,   page_size = 32 ) #>    code period geographic_level   NAT   REG Db3Qe emJuS 4kdUZ 5TYdi mU59K #> 1   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG bBrtT #> 2   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG bBrtT #> 3   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG GzNgr #> 4   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG 3Nk8u #> 5   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG rGcNj #> 6   W23   2024              REG dP0Zw rg3Nj pmRSo CvuId XVWfK qf0jG PyBeb #> 7   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG t74Em #> 8   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG jYyAM #> 9   W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG oWvmX #> 10  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG ea0uS #> 11  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf XVWfK qf0jG 5USdi #> 12  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG bBrtT #> 13  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG bBrtT #> 14  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG GzNgr #> 15  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG 3Nk8u #> 16  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG rGcNj #> 17  W23   2024              REG dP0Zw rg3Nj pmRSo CvuId crH31 qf0jG PyBeb #> 18  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG t74Em #> 19  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG jYyAM #> 20  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG oWvmX #> 21  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG ea0uS #> 22  W23   2024              REG dP0Zw rg3Nj pmRSo 6AXrf crH31 qf0jG 5USdi #> 23  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG bBrtT #> 24  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG bBrtT #> 25  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG GzNgr #> 26  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG 3Nk8u #> 27  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG rGcNj #> 28  W23   2024              NAT dP0Zw  <NA> pmRSo CvuId crH31 qf0jG PyBeb #> 29  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG t74Em #> 30  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG jYyAM #> 31  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG oWvmX #> 32  W23   2024              NAT dP0Zw  <NA> pmRSo 6AXrf crH31 qf0jG ea0uS #>         bqZtT #> 1      475991 #> 2        5235 #> 3      234417 #> 4      236991 #> 5      471408 #> 6        4583 #> 7         452 #> 8         226 #> 9         552 #> 10       4225 #> 11          0 #> 12      14497 #> 13        130 #> 14       7206 #> 15       7203 #> 16      14409 #> 17         88 #> 18        103 #> 19         26 #> 20          1 #> 21         24 #> 22          0 #> 23     157670 #> 24       2611 #> 25      77609 #> 26      78597 #> 27     156206 #> 28       1464 #> 29       2132 #> 30        287 #> 31         46 #> 32        343  # Run query_dataset() using set parameters giving a combination of filter options query_dataset(   example_id(group = \"attendance\"),   indicators = example_id(\"indicator\", group = \"attendance\"),   time_periods = \"2024|W23\",   geographies = c(\"NAT\"),   filter_items = list(     attendance_status = c(\"pmRSo\", \"7SdXo\"),     attendance_type = c(\"CvuId\", \"6AXrf\", \"0k3T5\", \"YdkHK\"),     education_phase = c(\"ThDPJ\", \"crH31\"),     day_number = c(\"uLQo4\"),     reason = c(\"bBrtT\")   ) ) #>   code period geographic_level   NAT 5TYdi mU59K Db3Qe emJuS 4kdUZ      bqZtT #> 1  W23   2024              NAT dP0Zw uLQo4 bBrtT pmRSo CvuId crH31     870024 #> 2  W23   2024              NAT dP0Zw uLQo4 bBrtT pmRSo 6AXrf crH31      17506 #> 3  W23   2024              NAT dP0Zw uLQo4 bBrtT 7SdXo 0k3T5 crH31      88094 #> 4  W23   2024              NAT dP0Zw uLQo4 bBrtT 7SdXo YdkHK crH31      37748 #> 5  W23   2024              NAT dP0Zw uLQo4 bBrtT pmRSo CvuId ThDPJ   20145467 #> 6  W23   2024              NAT dP0Zw uLQo4 bBrtT pmRSo 6AXrf ThDPJ     401209 #> 7  W23   2024              NAT dP0Zw uLQo4 bBrtT 7SdXo 0k3T5 ThDPJ    1093633 #> 8  W23   2024              NAT dP0Zw uLQo4 bBrtT 7SdXo YdkHK ThDPJ     956076  # Run a query with a more complex geography selection. Return data for all of: #   - England #   - Yorkshire and the Humber #   - All LAs in Yorkshire and the Humber example_geography_query(\"nat_yorks_yorkslas\") #>   return_level search_level identifier_type identifier #> 1          NAT          NAT            code  E92000001 #> 2          REG          REG            code  E12000004 #> 3           LA          REG            code  E12000004 query_dataset(   example_id(group = \"attendance\"),   indicators = example_id(\"indicator\", group = \"attendance\"),   time_periods = \"2024|W23\",   geographies = example_geography_query(\"nat_yorks_yorkslas\"),   filter_items = list(     attendance_status = c(\"pmRSo\"),     attendance_type = c(\"CvuId\"),     education_phase = c(\"ThDPJ\"),     day_number = c(\"uLQo4\"),     reason = c(\"bBrtT\")   ) ) #>    code period geographic_level    LA   NAT   REG Db3Qe emJuS 4kdUZ 5TYdi mU59K #> 1   W23   2024               LA mWI9K dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 2   W23   2024               LA hZYyW dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 3   W23   2024               LA 5RVdi dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 4   W23   2024               LA TkqPJ dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 5   W23   2024               LA eyjuS dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 6   W23   2024               LA eLGuS dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 7   W23   2024               LA BSk7J dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 8   W23   2024               LA gJZO9 dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 9   W23   2024              REG  <NA> dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 10  W23   2024              NAT  <NA> dP0Zw  <NA> pmRSo CvuId ThDPJ uLQo4 bBrtT #> 11  W23   2024               LA eLTuS dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #> 12  W23   2024               LA jHaAM dP0Zw rg3Nj pmRSo CvuId ThDPJ uLQo4 bBrtT #>         bqZtT #> 1      131228 #> 2       21456 #> 3      194011 #> 4      147391 #> 5      121030 #> 6      294233 #> 7      244947 #> 8      296357 #> 9     1862256 #> 10   20145467 #> 11     134245 #> 12     277358  # Run a basic query using GET instead of POST query_dataset(   example_id(),   method = \"GET\",   geographic_levels = c(\"SCH\"),   filter_items = example_id(\"filter_item\"),   indicators = example_id(\"indicator\"),   page = 1,   page_size = 10 ) #> Warning: Using GET to query a data set offers limited functionality, we recommend using POST alongside a JSON structured query instead: #>    - query_dataset(..., method = 'POST') #>    code    period geographic_level    LA   NAT   SCH tu1Em f2GYF PbNeb #> 1    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb 9Rpn4  1777 #> 2    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb HJjXz  1505 #> 3    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb 7YbEX  1505 #> 4    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb iNW86   510 #> 5    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb u9vRo     z #> 6    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb XHEvf    18 #> 7    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb LleUW   524 #> 8    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb a2eWL     z #> 9    AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb Bfbf7     z #> 10   AY 2022/2023              SCH H0RzL dP0Zw mLJt9 wEZcb qGKqj     z"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_filter_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate filter type — validate_ees_filter_type","title":"Validate filter type — validate_ees_filter_type","text":"Validate filter type","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_filter_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate filter type — validate_ees_filter_type","text":"","code":"validate_ees_filter_type(filter_type)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_filter_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate filter type — validate_ees_filter_type","text":"filter_type type filter queried: \"time_periods\", \"geographic_levels\",","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_filter_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate filter type — validate_ees_filter_type","text":"","code":"validate_ees_filter_type(\"time_periods\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate element IDs — validate_ees_id","title":"Validate element IDs — validate_ees_id","text":"Validate element IDs","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate element IDs — validate_ees_id","text":"","code":"validate_ees_id(element_id, level = \"publication\", verbose = FALSE)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate element IDs — validate_ees_id","text":"element_id ID publication data set level ID level: \"publication\", \"dataset\", \"location\", \"filter_item\" \"indicator\" verbose Run verbose mode","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_ees_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate element IDs — validate_ees_id","text":"","code":"validate_ees_id(example_id(\"publication\"), level = \"publication\")"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_page_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate page size — validate_page_size","title":"Validate page size — validate_page_size","text":"Validate page size","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_page_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate page size — validate_page_size","text":"","code":"validate_page_size(page_size, min = 1, max = 40)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_page_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate page size — validate_page_size","text":"page_size Chosen page size min Minimum valid page_size EES API max Maximum valid page_size EES API","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_page_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate page size — validate_page_size","text":"Logic","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_page_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate page size — validate_page_size","text":"","code":"validate_page_size(20)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_time_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate time periods — validate_time_periods","title":"Validate time periods — validate_time_periods","text":"Validate time periods","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_time_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate time periods — validate_time_periods","text":"","code":"validate_time_periods(time_periods)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_time_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate time periods — validate_time_periods","text":"time_periods Time periods required string (\"period|code\") vector strings","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/validate_time_periods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate time periods — validate_time_periods","text":"","code":"validate_time_periods(c(\"2023|AY\", \"2024|AY\"))"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/warning_max_pages.html","id":null,"dir":"Reference","previous_headings":"","what":"Overshot maximum pages in results — warning_max_pages","title":"Overshot maximum pages in results — warning_max_pages","text":"Overshot maximum pages results","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/warning_max_pages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Overshot maximum pages in results — warning_max_pages","text":"","code":"warning_max_pages(api_result)"},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/warning_max_pages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Overshot maximum pages in results — warning_max_pages","text":"api_result Output API get query","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/reference/warning_max_pages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Overshot maximum pages in results — warning_max_pages","text":"","code":"response_page <- httr::GET(eesyapi::api_url(page_size = 10, page = 1)) |>   httr::content(\"text\") |>   jsonlite::fromJSON() |>   warning_max_pages()"},{"path":"https://dfe-analytical-services.github.io/eesyapi/news/index.html","id":"eesyapi-030","dir":"Changelog","previous_headings":"","what":"eesyapi 0.3.0","title":"eesyapi 0.3.0","text":"query_dataset(): Now defaults using POST instead GET post_dataset(): Sends query data set, either using json file, json string parameters Updated example_id() works allow complex examples","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/news/index.html","id":"eesyapi-021","dir":"Changelog","previous_headings":"","what":"eesyapi 0.2.1","title":"eesyapi 0.2.1","text":"Created initial query_dataset() function queries data set using get_dataset() Created get_dataset() function queries data set using GET URL parameters Updated get_meta() work new API meta output (addition id alongside col_name label) Removed redundant function: parse_meta_filter_columns() Hex logo added documentation","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/news/index.html","id":"eesyapi-020","dir":"Changelog","previous_headings":"","what":"eesyapi 0.2.0","title":"eesyapi 0.2.0","text":"get_publication_catalogue(): Retrieve list available publications get_publication_datasets(): Retrieve list available data sets given publication example_id(): Provide example publication data set IDs (largely example code testing) api_url_pages(): Render string set paging API query results eesapi_url() -> api_url(): Name change function updated allow publication data set URLs warning_max_pages(): Check query page number exceeding total query pages available Added test data process maintaining data Added validate_ family validation helpers","code":""},{"path":"https://dfe-analytical-services.github.io/eesyapi/news/index.html","id":"eesyapi-010","dir":"Changelog","previous_headings":"","what":"eesyapi 0.1.0","title":"eesyapi 0.1.0","text":"get_meta(): primary function retrieving parsed R-friendly meta data get_meta_response(): underlying function retrieving meta data without full parsing parse_meta_location_ids(): convert location data initial meta response simple data frame parse_meta_filter_columns(): create data frame filter col_name label initial meta response parse_meta_filter_item_ids(): convert filter item data initial meta response simple data frame parse_meta_indicator_columns(): create data frame indicator col_name label initial meta response http_request_error(): render API url give endpoint / data set combination","code":""}]
