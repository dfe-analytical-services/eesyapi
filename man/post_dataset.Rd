% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/post_dataset.R
\name{post_dataset}
\alias{post_dataset}
\title{Query a data set using POST and a query json}
\usage{
post_dataset(
  dataset_id,
  indicators = NULL,
  time_periods = NULL,
  geographic_levels = NULL,
  locations = NULL,
  filter_items = NULL,
  json_query = NULL,
  dataset_version = NULL,
  api_version = NULL,
  page = NULL,
  page_size = 1000,
  parse = TRUE,
  verbose = FALSE
)
}
\arguments{
\item{dataset_id}{ID of data set to be connected to. This is required if the endpoint is one
of "get-summary", "get-meta", "get-data" or "post-data"}

\item{indicators}{Indicators required as a string or vector of strings (required)}

\item{time_periods}{Time periods required as a string ("period|code") or vector of strings}

\item{geographic_levels}{Geographic levels required as a string or vector of strings}

\item{locations}{Location code required as a string or vector of strings}

\item{filter_items}{Filter items required as a string or vector of strings}

\item{json_query}{Optional path to a json file containing the query parameters}

\item{dataset_version}{Version of data set to be connected to}

\item{api_version}{EES API version}

\item{page}{Page number of query results to return}

\item{page_size}{Number of results to return in a single query}

\item{parse}{Logical flag to activate parsing of the results. Default: TRUE}

\item{verbose}{Add extra contextual information whilst running}
}
\value{
Data frame containing query results of an API data set
}
\description{
This function provides a method for generating and sending a json based data query to the
EES API. As a minimum, it requires the dataset_id flag and either the indicators flag or
a json file containing a query to be provided.
}
\examples{
test_query <- '{
"criteria": {
  "and": [
    {
      "geographicLevels": {
        "eq": "NAT"
      }
    },{
      "timePeriods": {
        "in": [
          {
            "period": "2024",
            "code": "W26"
          }
        ]
      }
    },  {
      "filters": {
        "eq": "jYyAM"
      }
    }
  ]
},
"indicators": [
  "bqZtT"
],
"debug": true,
"page": 1,
"pageSize": 1000
}'

post_dataset(
  example_id(group = "attendance"),
  json_query = test_query
)

post_dataset(
  example_id(group = "attendance"),
  indicators = example_id("indicator"),
  time_periods = "2024|W23",
  geographic_levels = c("NAT", "REG"),
  filter_items = c("pmRSo", "7SdXo")
)
}
