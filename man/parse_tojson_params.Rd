% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/post_dataset_utils.R
\name{parse_tojson_params}
\alias{parse_tojson_params}
\title{Create a json query}
\usage{
parse_tojson_params(
  indicators,
  time_periods = NULL,
  geographies = NULL,
  filter_items = NULL,
  page = 1,
  page_size = 1000,
  debug = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{indicators}{Indicators required as a string or vector of strings (required)}

\item{time_periods}{Time periods required as a string ("period|code") or vector of strings}

\item{geographies}{String, vector or data frame containing the geographic levels and
locations to be queried.}

\item{filter_items}{Filter items required as a string or vector of strings}

\item{page}{Page number of query results to return}

\item{page_size}{Number of results to return in a single query}

\item{debug}{Run POST query in debug mode: logic, default: FALSE}

\item{verbose}{Add extra contextual information whilst running}
}
\value{
String containing json query body for use with http POST request
}
\description{
Creates a json query for use when POST-ing a query to the API. This takes time period,
geography, filter item and indicator criteria and produces a working json query as a
single string. The result can be used directly by post_dataset() or the output of
\code{parse_tojson_params(...) |> cat()} can be copied and pasted as the "body" content in
other API connection software (such as Postman) to POST a query to the EES API.
}
\examples{
parse_tojson_params(example_id("indicator")) |>
  cat()

parse_tojson_params(
  example_id("indicator"),
  time_periods = "2024|W23",
  geographies = c("NAT|id|dP0Zw", "REG|id|rg3Nj"),
  filter_items = c("pmRSo", "7SdXo")
) |>
  cat()

# Create a geographies data frame to find both of:
#   - England national level data
#   - all LAs in a specified region ("E12000004")
dfgeographies <- data.frame(
  return_level = c("NAT", "LA"),
  search_level = c("NAT", "REG"),
  identifier_type = c("code", "code"),
  identifier = c("E92000001", "E12000004")
)

parse_tojson_params(
  example_id("indicator"),
  time_periods = "2024|W23",
  geographies = dfgeographies,
  filter_items = c("pmRSo")
) |>
  cat()

# Create a filter list to find the combination of:
#   - day_number is in c("uLQo4", "qf0jG", "aMjLP") *and*
#   - reason is in c("bBrtT", "ThjPJ", "hsHyW", "m2m9K") *and*
#   - education_phase is in c("5UNdi", "crH31")
filter_list <- list(
  day_number = c("uLQo4", "qf0jG", "aMjLP"),
  reason = c("bBrtT", "ThjPJ", "hsHyW", "m2m9K"),
  education_phase = c("5UNdi", "crH31")
)

parse_tojson_params(
  example_id("indicator"),
  time_periods = "2024|W23",
  geographies = "NAT|code|E92000001",
  filter_items = filter_list
) |>
  cat()

}
